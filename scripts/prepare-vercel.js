const fs = require('fs');

console.log('üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ Vercel...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–∂–Ω—ã–µ —Ñ–∞–π–ª—ã
const requiredFiles = [
    'next.config.js',
    'package.json', 
    'tsconfig.json',
    'src/app/utils/constants.ts',
    'src/app/components/NetworkInfo.tsx'
];

console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤:');
requiredFiles.forEach(file => {
    if (fs.existsSync(file)) {
        console.log(`‚úÖ ${file}`);
    } else {
        console.log(`‚ùå ${file} - –û–¢–°–£–¢–°–¢–í–£–ï–¢!`);
    }
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º .env.example
if (fs.existsSync('.env.example')) {
    console.log('‚úÖ .env.example');
} else {
    console.log('üìù –°–æ–∑–¥–∞—é .env.example...');
    const envExample = `# Environment Variables –¥–ª—è Vercel
NEXT_PUBLIC_PROJECT_ID=your-walletconnect-project-id
NEXT_PUBLIC_RPC_URL=https://mainnet.infura.io/v3/your-infura-key
NEXT_PUBLIC_CHAIN_ID=1

# –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–ù–ï –∑–∞–≥—Ä—É–∂–∞—Ç—å –Ω–∞ Vercel!):
DEPLOYER_PRIVATE_KEY=your-private-key-here`;
    
    fs.writeFileSync('.env.example', envExample);
    console.log('‚úÖ .env.example —Å–æ–∑–¥–∞–Ω');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º .gitignore
if (fs.existsSync('.gitignore')) {
    const gitignore = fs.readFileSync('.gitignore', 'utf8');
    if (!gitignore.includes('.env.local')) {
        console.log('‚ö†Ô∏è  –î–æ–±–∞–≤–ª—è—é .env.local –≤ .gitignore...');
        fs.appendFileSync('.gitignore', '\n# Environment variables\n.env.local\n.env\n');
        console.log('‚úÖ .gitignore –æ–±–Ω–æ–≤–ª–µ–Ω');
    } else {
        console.log('‚úÖ .gitignore –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –º—É–ª—å—Ç–∏-—Å–µ—Ç–µ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
console.log('\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –º—É–ª—å—Ç–∏-—Å–µ—Ç–µ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:');
try {
    const constants = fs.readFileSync('src/app/utils/constants.ts', 'utf8');
    
    if (constants.includes('CONTRACT_ADDRESSES')) {
        console.log('‚úÖ CONTRACT_ADDRESSES –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    } else {
        console.log('‚ùå CONTRACT_ADDRESSES –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }
    
    if (constants.includes('TOKEN_ADDRESSES')) {
        console.log('‚úÖ TOKEN_ADDRESSES –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    } else {
        console.log('‚ùå TOKEN_ADDRESSES –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }
    
    if (constants.includes('getNetworkConfig')) {
        console.log('‚úÖ getNetworkConfig —Ñ—É–Ω–∫—Ü–∏—è –≥–æ—Ç–æ–≤–∞');
    } else {
        console.log('‚ùå getNetworkConfig —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
} catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ constants.ts:', error.message);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json —Å–∫—Ä–∏–ø—Ç—ã
console.log('\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤ –≤ package.json:');
try {
    const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
    const scripts = packageJson.scripts || {};
    
    if (scripts.build) {
        console.log('‚úÖ build —Å–∫—Ä–∏–ø—Ç');
    } else {
        console.log('‚ùå build —Å–∫—Ä–∏–ø—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
    }
    
    if (scripts.start) {
        console.log('‚úÖ start —Å–∫—Ä–∏–ø—Ç');
    } else {
        console.log('‚ùå start —Å–∫—Ä–∏–ø—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
    }
    
    if (scripts.dev) {
        console.log('‚úÖ dev —Å–∫—Ä–∏–ø—Ç');
    } else {
        console.log('‚ùå dev —Å–∫—Ä–∏–ø—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
    }
} catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ package.json:', error.message);
}

console.log('\nüéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Vercel:');
console.log('1. üì§ git add . && git commit -m "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ Vercel" && git push');
console.log('2. üåê –ó–∞–π–¥–∏—Ç–µ –Ω–∞ https://vercel.com –∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π');
console.log('3. ‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Environment Variables –∏–∑ .env.example');
console.log('4. üöÄ –ù–∞–∂–º–∏—Ç–µ Deploy!');
console.log('5. üß™ –ó–∞–¥–µ–ø–ª–æ–π—Ç–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç –≤ Sepolia –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
console.log('6. üí∞ –ó–∞–¥–µ–ø–ª–æ–π—Ç–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç –≤ Mainnet –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞');

console.log('\n‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ Vercel!');
