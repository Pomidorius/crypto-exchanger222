'use client'

import { useState } from 'react'

export function TestFaucet() {
  const [isLoading, setIsLoading] = useState(false)
  const [message, setMessage] = useState('')
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –≤ —Ç–µ—Å—Ç–æ–≤–æ–π —Å–µ—Ç–∏
  const isTestnet = process.env.NEXT_PUBLIC_CHAIN_ID === '11155111'
  
  if (!isTestnet) return null

  const handleGetTestTokens = async () => {
    setIsLoading(true)
    setMessage('')
    
    try {
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤
      // –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      setTimeout(() => {
        setMessage('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–∫–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã!')
        setIsLoading(false)
      }, 2000)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤:', error)
      setMessage('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤')
      setIsLoading(false)
    }
  }

  return (
    <div className="bg-gradient-to-r from-blue-100 to-purple-100 border border-blue-400 p-4 rounded-lg mb-6 shadow-sm">
      <div className="flex items-center gap-3">
        <span className="text-2xl">üö∞</span>
        <div className="flex-1">
          <h3 className="font-bold text-blue-800 text-lg">–¢–µ—Å—Ç–æ–≤—ã–π –∫—Ä–∞–Ω —Ç–æ–∫–µ–Ω–æ–≤</h3>
          <p className="text-blue-700 text-sm mt-1">
            –ü–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–∫–µ–Ω—ã –¥–ª—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ —Å –æ–±–º–µ–Ω–Ω–∏–∫–æ–º.
          </p>
        </div>
      </div>
      
      <div className="mt-4 flex flex-col gap-3">
        <button
          onClick={handleGetTestTokens}
          disabled={isLoading}
          className="w-full px-4 py-2 bg-blue-500 text-white rounded-md font-medium hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
        >
          {isLoading ? (
            <span className="flex items-center justify-center gap-2">
              <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
              –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤...
            </span>
          ) : (
            'üíß –ü–æ–ª—É—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–∫–µ–Ω—ã'
          )}
        </button>
        
        {message && (
          <div className={`text-sm p-2 rounded ${
            message.includes('‚úÖ') 
              ? 'bg-green-100 text-green-700 border border-green-300' 
              : 'bg-red-100 text-red-700 border border-red-300'
          }`}>
            {message}
          </div>
        )}
        
        <div className="text-xs text-blue-600">
          üí° –¢–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–∫–µ–Ω—ã –Ω–µ –∏–º–µ—é—Ç —Ä–µ–∞–ª—å–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        </div>
      </div>
    </div>
  )
}
