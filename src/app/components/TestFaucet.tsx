'use client'

import { useState } from 'react'
import { useChainId, useAccount } from 'wagmi'

export function TestFaucet() {
  const [isLoading, setIsLoading] = useState(false)
  const [message, setMessage] = useState('')
  const [txHash, setTxHash] = useState('')
  const chainId = useChainId()
  const { address, isConnected } = useAccount()
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–ª—è Sepolia testnet
  const isSepoliaTestnet = chainId === 11155111 || process.env.NEXT_PUBLIC_CHAIN_ID === '11155111'
  
  if (!isSepoliaTestnet) return null

  const handleMintToken = async (token: 'USDC' | 'USDT' | 'ETH') => {
    if (!isConnected || !address) {
      setMessage('‚ùå –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤')
      return
    }
    
    setIsLoading(true)
    setMessage(`üîÑ –ó–∞–ø—Ä–æ—Å ${token === 'ETH' ? 'SepoliaETH' : token + ' —Ç–æ–∫–µ–Ω–æ–≤'}...`)
    setTxHash('')
    
    try {
      const response = await fetch('/api/mint-tokens', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          address,
          token
        }),
      })

      const data = await response.json()

      if (data.success) {
        setMessage(`‚úÖ ${data.message}`)
        setTxHash(data.txHash)
      } else {
        setMessage(`‚ùå –û—à–∏–±–∫–∞: ${data.error}`)
      }
      
    } catch (error: unknown) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Ç–æ–∫–µ–Ω–æ–≤:', error)
      setMessage(`‚ùå –û—à–∏–±–∫–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`)
    } finally {
      setIsLoading(false)
    }
  }

  const handleGetUSDC = () => handleMintToken('USDC')
  const handleGetUSDT = () => handleMintToken('USDT')
  const handleGetETH = () => handleMintToken('ETH')

  return (
    <div className="bg-gradient-to-r from-blue-100 to-purple-100 border border-blue-400 p-4 rounded-lg mb-6 shadow-sm">
      <div className="flex items-center gap-3">
        <span className="text-2xl">üö∞</span>
        <div className="flex-1">
          <h3 className="font-bold text-blue-800 text-lg">–î–µ–º–æ: –¢–µ—Å—Ç–æ–≤—ã–π –∫—Ä–∞–Ω —Ç–æ–∫–µ–Ω–æ–≤</h3>
          <p className="text-blue-700 text-sm mt-1">
            –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤. –î–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–Ω–µ—à–Ω–∏–µ faucet&apos;—ã.
          </p>
        </div>
      </div>
      
      <div className="mt-4 flex flex-col gap-3">
        {!isConnected ? (
          <div className="text-sm text-blue-700 p-2 bg-blue-50 rounded border border-blue-200">
            üí° –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤
          </div>
        ) : (
          <div className="grid grid-cols-3 gap-2">
            <button
              onClick={handleGetETH}
              disabled={isLoading}
              className="px-3 py-2 bg-orange-500 text-white rounded-md font-medium hover:bg-orange-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors text-sm"
            >
              {isLoading ? (
                <span className="flex items-center justify-center gap-1">
                  <div className="w-3 h-3 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                  ...
                </span>
              ) : (
                'üé≠ –î–µ–º–æ: 0.1 ETH'
              )}
            </button>
            <button
              onClick={handleGetUSDC}
              disabled={isLoading}
              className="px-3 py-2 bg-blue-500 text-white rounded-md font-medium hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors text-sm"
            >
              {isLoading ? (
                <span className="flex items-center justify-center gap-1">
                  <div className="w-3 h-3 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                  ...
                </span>
              ) : (
                'üé≠ –î–µ–º–æ: 1000 USDC'
              )}
            </button>
            <button
              onClick={handleGetUSDT}
              disabled={isLoading}
              className="px-3 py-2 bg-green-500 text-white rounded-md font-medium hover:bg-green-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors text-sm"
            >
              {isLoading ? (
                <span className="flex items-center justify-center gap-1">
                  <div className="w-3 h-3 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                  ...
                </span>
              ) : (
                'üé≠ –î–µ–º–æ: 1000 USDT'
              )}
            </button>
          </div>
        )}
        
        {message && (
          <div className={`text-sm p-2 rounded ${
            message.includes('‚úÖ') 
              ? 'bg-green-100 text-green-700 border border-green-300' 
              : message.includes('‚ùå')
              ? 'bg-red-100 text-red-700 border border-red-300'
              : 'bg-yellow-100 text-yellow-700 border border-yellow-300'
          }`}>
            {message}
            {txHash && message.includes('‚úÖ') && (
              <div className="mt-2">
                <div className="text-xs text-orange-600 mb-1">
                  ‚ö†Ô∏è –î–µ–º–æ-—Ö—ç—à: {txHash.slice(0,10)}...{txHash.slice(-4)}
                </div>
                <div className="text-xs text-red-600 font-bold bg-red-50 p-2 rounded border border-red-200">
                  üö´ –í–ù–ò–ú–ê–ù–ò–ï: –ë–∞–ª–∞–Ω—Å –≤ –∫–æ—à–µ–ª—å–∫–µ –ù–ï –∏–∑–º–µ–Ω–∏—Ç—Å—è! –≠—Ç–æ —Ç–æ–ª—å–∫–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.
                </div>
                <div className="text-xs text-gray-500 mt-1">
                  üí° –í –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–∏–º—É–ª–∏—Ä—É—é—Ç—Å—è. –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –±—É–¥—É—Ç —Ä–µ–∞–ª—å–Ω—ã–µ Sepolia —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.
                </div>
              </div>
            )}
          </div>
        )}
        
        <div className="grid grid-cols-2 gap-2 text-xs">
          <a
            href="https://sepoliafaucet.com/"
            target="_blank"
            rel="noopener noreferrer"
            className="flex items-center justify-center gap-1 px-2 py-1 bg-green-500 text-white rounded hover:bg-green-600 transition-colors"
          >
            üíß ETH Faucet
          </a>
          <a
            href={`https://sepolia.etherscan.io/address/${address}`}
            target="_blank"
            rel="noopener noreferrer"
            className="flex items-center justify-center gap-1 px-2 py-1 bg-gray-500 text-white rounded hover:bg-gray-600 transition-colors"
          >
            üîç Etherscan
          </a>
        </div>
        
        <div className="text-xs text-blue-600 bg-blue-50 p-3 rounded border border-blue-200">
          <div className="font-bold mb-2">‚ö†Ô∏è –í–ê–ñ–ù–û - –î–µ–º–æ —Ä–µ–∂–∏–º:</div>
          <div className="space-y-1">
            <div>‚Ä¢ üé≠ <strong>–ö–Ω–æ–ø–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç</strong> - –Ω–æ —Ç–æ–∫–µ–Ω—ã –ù–ï –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –≤ –∫–æ—à–µ–ª–µ–∫</div>
            <div>‚Ä¢ üí´ <strong>–≠—Ç–æ —Å–∏–º—É–ª—è—Ü–∏—è</strong> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å</div>
            <div>‚Ä¢ üí∞ <strong>–î–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤</strong> - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ faucet&apos;—ã –Ω–∏–∂–µ</div>
            <div>‚Ä¢ üöÄ <strong>–í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ</strong> - –±—É–¥—É—Ç –Ω–∞—Å—Ç–æ—è—â–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏</div>
          </div>
        </div>
        
        <div className="mt-3 p-3 bg-yellow-50 border border-yellow-300 rounded">
          <div className="text-sm font-bold text-yellow-800 mb-2">
            üéØ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –†–ï–ê–õ–¨–ù–´–• —Ç–æ–∫–µ–Ω–æ–≤:
          </div>
          <div className="grid grid-cols-2 gap-2 text-xs">
            <a
              href="https://sepoliafaucet.com/"
              target="_blank"
              rel="noopener noreferrer"
              className="flex items-center justify-center gap-1 px-2 py-1 bg-green-500 text-white rounded hover:bg-green-600 transition-colors"
            >
              üíß SepoliaETH Faucet
            </a>
            <a
              href="https://faucet.quicknode.com/ethereum/sepolia"
              target="_blank"
              rel="noopener noreferrer"
              className="flex items-center justify-center gap-1 px-2 py-1 bg-purple-500 text-white rounded hover:bg-purple-600 transition-colors"
            >
              üö∞ QuickNode Faucet
            </a>
          </div>
        </div>
      </div>
    </div>
  )
}
